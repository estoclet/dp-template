{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}
{% if 'field_responsive' in content|keys %}
  {% if content.field_responsive['#items'].value == '1' %}
    {% set classes = classes|merge(['not_responsive']) %}
  {% endif %}
{% endif %}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}
      <div class="wrapper-xxl">
        <div class="wrapper-svg">
          {{ content.field_pg_svg_illustrated }}
          {{ content.field_pg_svg_wired }}
          <div class="story-separator" aria-hidden="true" tabindex="-1"></div>
        </div>
        <div class="wrapper-texte">
          {% if content.field_pg_title[0]['#context']['value'] is not empty  %}
            <h2>{{ content.field_pg_title[0]['#context']['value'] }}</h2>
          {% endif %}
          {{ content.field_pg_introduction }}
          <div class="experience">
            <div class="experience-identity">
            <p>
              {% trans %}Ecouter l'exp√©rience de{% endtrans %}
              {% if '#items' in content.field_pg_identity|keys %}
                {{ content.field_pg_identity['#items'].value }}
              {% endif %} :
            </p>
            {% if '#items' in content.field_pg_description|keys %}
              <p class="field--name-field-pg-description">{{ content.field_pg_description['#items'].value }}</p>
            {% endif %}
            </div>
            {% if content.field_pg_transcript[0] %}
              {% set pdf_uri = file_url(content.field_pg_transcript[0]['#media'].field_media_file.entity.uri.value) %}
              <div class="experience-retranscription">
                <a href="{{ pdf_uri }}" aria-label="{% trans %}Retranscription{% endtrans %}" download="{% trans %}Retranscription{% endtrans %}">{% trans %}Retranscription{% endtrans %}</a>
              </div>
            {% endif %}
          </div>
          {{ content.field_pg_audio }}

          {# {% if '0' in content.field_pg_chiffre_reference|keys %}
            {% if '#paragraph' in content.field_pg_chiffre_reference[0]|keys %}
            <p>{{content.field_pg_chiffre_reference[0]['#paragraph'].field_pg_key_figure_alt.value}}</p>
            {% endif %}
          {% endif %} #}
          {{ content.field_pg_chiffre_reference }}

          {{ content.field_pg_text }}
        </div>
      </div>
    {% endblock %}
  </div>
{% endblock paragraph %}
