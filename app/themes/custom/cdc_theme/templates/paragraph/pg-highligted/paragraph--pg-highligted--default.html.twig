{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
  'paragraph',
  'paragraph--type--' ~ paragraph.bundle|clean_class,
  view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
  not paragraph.isPublished() ? 'paragraph--unpublished'
]
%}

{% set bgcolorhexa = content.field_background_color[0]['#markup'] %}
{% set bgcolorclass = content.field_background_color|render|striptags|replace({"\n":'', "\r":''})%}
{% set bgimage  = file_url(paragraph.field_pg_media_reference.entity.field_media_image.entity.fileuri) %}
{% if content.field_background_color[0]['#markup'] is empty %}
  {% set bgcolorhexa = '#FFFFFF' %}
  {% set bgcolorclass = 'bg__blanc'%}
{% endif %}
{% if 'field_responsive' in content|keys %}
  {% if content.field_responsive['#items'].value == '1' %}
    {% set classes = classes|merge(['not_responsive']) %}
  {% endif %}
{% endif %}
{% block paragraph %}
  <div{{ attributes.addClass(classes) }}>
    {% block content %}
    <div class="background-image-block__section">
      <div class="background-image" style="background-image:url('{{ bgimage }}');"></div>
          {# Variables Cr√©dits d'image #}
          {# ici #}
          {# {{ paragraph.field_pg_media_reference.entity.field_media_credential.value }} #}
      <div class="wrapper-xxl">
        <div class="fond-svg">
          <svg viewBox="0 0 941 563" fill="none" xmlns="http://www.w3.org/2000/svg" role="img" aria-hidden="true">
            <path d="M-2.93507e-05 474.534L-5.00933e-05 0L474.534 -2.07425e-05L1146 671.466L1146 1146L671.466 1146L-2.93507e-05 474.534Z" fill="{{ bgcolorhexa }}"/>
          </svg>
        </div>
        <div class="wrapper-texte {{ bgcolorclass }}">
          <div class="highlighted-content">
            {{ title_prefix }}
            {% if content.field_pg_title[0]['#context']['value'] is not empty %}
              <h2>{{ content.field_pg_title[0]['#context']['value'] }}</h2>
            {% endif %}
            {{ title_suffix.contextual_links }}
            {{ content.field_pg_chapo }}
            {{ content.field_pg_link }}
          </div>
        </div>
      </div>
    </div>
    {% endblock %}
  </div>
{% endblock paragraph %}
