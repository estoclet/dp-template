{#
/**
 * @file
 * Bootstrap Barrio's theme implementation to display a node.
 *
 * Available variables:
 * - node: The node entity with limited access to object properties and methods.
     Only "getter" methods (method names starting with "get", "has", or "is")
     and a few common methods such as "id" and "label" are available. Calling
     other methods (such as node.delete) will result in an exception.
 * - label: The title of the node.
 * - content: All node items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - author_picture: The node author user entity, rendered using the "compact"
 *   view mode.
 * - metadata: Metadata for this node.
 * - date: Themed creation date field.
 * - author_name: Themed author name field.
 * - url: Direct URL of the current node.
 * - display_submitted: Whether submission information should be displayed.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - node: The current template type (also known as a "theming hook").
 *   - node--type-[type]: The current node type. For example, if the node is an
 *     "Article" it would result in "node--type-article". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - node--view-mode-[view_mode]: The View Mode of the node; for example, a
 *     teaser would result in: "node--view-mode-teaser", and
 *     full: "node--view-mode-full".
 *   The following are controlled through the node publishing options.
 *   - node--promoted: Appears on nodes promoted to the front page.
 *   - node--sticky: Appears on nodes ordered above other non-sticky nodes in
 *     teaser listings.
 *   - node--unpublished: Appears on unpublished nodes visible only to site
 *     admins.
 * - title_attributes: Same as attributes, except applied to the main title
 *   tag that appears in the template.
 * - content_attributes: Same as attributes, except applied to the main
 *   content tag that appears in the template.
 * - author_attributes: Same as attributes, except applied to the author of
 *   the node tag that appears in the template.
 * - title_prefix: Additional output populated by modules, intended to be
 *   displayed in front of the main title tag that appears in the template.
 * - title_suffix: Additional output populated by modules, intended to be
 *   displayed after the main title tag that appears in the template.
 * - view_mode: View mode; for example, "teaser" or "full".
 * - teaser: Flag for the teaser state. Will be true if view_mode is 'teaser'.
 * - page: Flag for the full page state. Will be true if view_mode is 'full'.
 * - readmore: Flag for more state. Will be true if the teaser content of the
 *   node cannot hold the main body content.
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_node()
 */
#}
{%
set classes = [
'node',
'node--type-' ~ node.bundle|clean_class,
node.isPromoted() ? 'node--promoted',
node.isSticky() ? 'node--sticky',
not node.isPublished() ? 'node--unpublished',
view_mode ? 'node--view-mode-' ~ view_mode|clean_class,
'clearfix'
]
%}

{% set color = content.field_color_primary|render|striptags|replace({"\n":'', "\r":''}) %}
{% set bgimage  = file_url(content.field_media_reference[0]['#media'].field_media_image.entity.uri.value) %}
{% set imgwidth = content.field_media_reference[0]['#media'].field_media_image.width %}
{% set imgheight = content.field_media_reference[0]['#media'].field_media_image.height %}
{% if  (imgheight < 1581) and imgheight != 0 %}
	{% set imgwidth = (imgwidth*1581)/imgheight %}
	{% set imgheight = 1581 %}
{% endif %}

<div {{attributes.addClass(classes)}}>
<div
	class="svg-wrapper">
	{#<div class="svg-home">
				        <svg viewbox="0 0 940 1581" fill="none" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" role="img" aria-hidden="true">
				          <path d="M940 0.630127V1281.37L640.37 1581H0V940.63L940 0.630127Z" fill="{{ color }}"/>
				          <path d="M940 88V1193.81L606.813 1527H54V974.186L940 88Z" fill="url(#pattern0)"/>
				          <defs>
				            <pattern id="pattern0" patterncontentunits="objectBoundingBox" width="1" height="1">
				              <use xlink:href="#image0" transform="scale(0.00112867 0.000694927)"/>
				            </pattern>
				            <image id="image0" width="{{ imgwidth }}" height="{{ imgheight }}" xlink:href="{{ bgimage }}" alt=""/>
				          </defs>
				        </svg>
				      </div>#}
	<div class="svg-home">
		<svg viewbox="-469.5 -781.5 940 1581" fill="none" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" aria-hidden="true">
			<polygon fill="#E30613" points="470.5,-693.984 470.5,-781.502 -469.5,158.896 -469.5,799.502 170.833,799.502 470.5,499.877   470.5,412.188 137.384,745.447 -415.467,745.447 -415.467,192.531 "></polygon>
			<g>
				<polygon fill="#FFFFFF" points="470.5,799.505 470.5,499.88 170.833,799.505  "></polygon>
				<polygon fill="#FFFFFF" points="-469.5,-781.5 -469.5,158.899 470.5,-781.499 470.5,-781.5  "></polygon>
			</g>
		</svg>
		<img id="image0" width="{{ imgwidth }}" height="{{ imgheight }}" alt="" src="{{ bgimage }}">
	</div>
</div>
	{# Variables Crédits d'image #}
	{# ici #}
	<div class="field field--name-field-media-credential field--type-string field--label-inline">
		<div class="field--label">Crédit</div>
		<div class="field--item">{{ node.field_media_reference.entity.field_media_credential.value }}</div>
	</div>
	<div class="header-text-home bg--dark" style="background-image:url('{{ bgimage }}');">
		<h2>
			<a href="{{ content.field_head_link[0]['#url'] }}">
				{{ content.field_head_title.0 }}</a>
		</h2>

		{% if content.field_head_text is not empty %}
			{{ content.field_head_text }}
			{{ content.field_head_link }}
		{% endif %}

		{# Variables Crédits d'image #}
		{# ici #}
		{% if node.field_media_reference.entity.field_media_credential is not empty %}
			<div class="field field--name-field-media-credential field--type-string field--label-inline">
				<div class="field--label">{{ 'Crédit'|t }}</div>
				<div class="field--item">{{ node.field_media_reference.entity.field_media_credential.value }}</div>
			</div>
		{% endif %}
	</div>
</div>

